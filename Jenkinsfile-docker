pipeline {
    agent any

    tools {
        jdk 'jdk17'
        nodejs 'node20'
    }

    environment {
        SCANNER_HOME = '' // SonarQube scanner
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', credentialsId: 'github_seccred',
                    url: 'https://github.com/DeepikaRajasundar/docker.git'
            }
        }

        stage("SonarQube Analysis") {
            steps {
                script {
                    SCANNER_HOME = tool 'sonar-scanner'
                }
                withSonarQubeEnv('sonar-server') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner \
                    -Dsonar.projectName=Hotstar \
                    -Dsonar.projectKey=Hotstar
                    '''
                }
            }
        }

        stage("Quality Gate Check") {
            steps {
                script {
                    timeout(time: 5, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true, credentialsId: 'sonar-token'
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    echo "Installing npm dependencies..."
                    sh '''
                    for i in 1 2 3 4 5; do npm install && break || sleep 5; done
                    '''
                }
            }
        }

        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker') {
                        sh '''
                        docker build -t deepika452005/devops_docker:latest .
                        docker push deepika452005/devops_docker:latest
                        '''
                    }
                }
            }
        }

        stage("Deploy Docker Container") {
            steps {
                script {
                    echo "Deploying the Docker container..."
                    sh '''
                    docker stop devops_container || true
                    docker rm devops_container || true
                    docker run -d --name devops_container -p 4001:4000 deepika452005/devops_docker:latest
                    '''
                }
            }
        }
    }
}
